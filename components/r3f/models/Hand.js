/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { MeshWobbleMaterial, useGLTF } from "@react-three/drei";
import { motion as motion3d } from "framer-motion-3d";
import { MotionConfig } from "framer-motion";

const transitionDuration = 2.75;

export default React.forwardRef((props, ref) => {
  const { nodes, materials } = useGLTF("/assets/models/hand.glb");
  return (
    <MotionConfig
      transition={{
        duration: 2,
        ease: [0.54, 0.01, 0.61, 1],
      }}
    >
      <motion3d.group
        scale={8}
        ref={ref}
        dispose={null}
        animate={props.state ?? "holding"}
        variants={{
          holdingWord: {
            rotateY: 3.14,
            rotateZ: -0.6,
            x: 4,
            y: -3,
            z: 0,
          },
          holding: {
            rotateX: 0,
            rotateY: 3.14,
            rotateZ: 0,
            x: 3.2,
            y: -3.25,
            z: 0,
            transition: {
              duration: transitionDuration,
            },
          },
        }}
        onAnimationComplete={props.handleAnimationComplete}
      >
        <mesh
          geometry={nodes.Plane005.geometry}
          material={materials["Material #46"]}
          position={[-3.73, -1.01, 0.78]}
          rotation={[-1.59, 0.88, -2.75]}
          scale={0.01}
          castShadow
          receiveShadow
        >
          <MeshWobbleMaterial
            attach="material"
            factor={0.00075}
            speed={3}
            color="#b2a99b"
          />
        </mesh>
      </motion3d.group>
    </MotionConfig>
  );
});

useGLTF.preload("/assets/models/hand.glb");
