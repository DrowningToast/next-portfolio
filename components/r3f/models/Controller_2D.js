/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useBox, useSphere } from "@react-three/cannon";
import { useFrame } from "@react-three/fiber";

const vec = new THREE.Vector3();

export default function Controller_2D({ ...props }) {
  const { nodes, materials } = useGLTF("/assets/models/Controller_2D.gltf");

  const position = useRef([0, 0, 0]);

  useEffect(() => api.position.subscribe((v) => (position.current = v)), [api]);
  useFrame(() => {
    api.applyForce(
      vec
        .set(
          ...[
            position.current[0] - (props?.selected ? 6 : 0),
            position.current[1] + (props?.selected ? 0 : 2),
            position.current[2],
          ]
        )
        .normalize()
        .multiplyScalar(-1)
        .multiplyScalar(7)
        .toArray(),
      [0, 0, 0]
    );
  });

  const [ref, api] = useBox(() => ({ mass: 1, args: [3, 2.8, 1.25] }));

  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Game.geometry}
        material={nodes.Game.material}
        material-color={"#CF55E3"}
      />
    </group>
  );
}

useGLTF.preload("/assets/models/Controller_2D.gltf");
